#!/usr/bin/env python3
import subprocess,sys
import argparse

airport_bin = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport'
networksetup_bin = '/usr/sbin/networksetup'
security_bin = '/usr/bin/security'


## Argparse arguments
parser = argparse.ArgumentParser(description="MacOS CLI tool for managing wifi connections")
subparsers = parser.add_subparsers(help='commands', dest='command')
parser.add_argument('-d', '--device', help='Device', default="en0")

### On subparser
parser_on = subparsers.add_parser('on', help='Turn on wifi')

### Off subparser
parser_off = subparsers.add_parser('off', help='Turn off wifi')

### Scan subparser
parser_scan = subparsers.add_parser('scan', help='Scan for wifi networks')

### Connect subparser
parser_connect = subparsers.add_parser('connect', help='Connect to wifi network')
parser_connect.add_argument('-n', '--network', help='SSID name', required=True)
parser_connect.add_argument('-p', '--password', help='Wifi passphrase', required=True)

### Info subparser
parser_info = subparsers.add_parser('info', help='Fetch current wifi info')

### Pass subparser
parser_connect = subparsers.add_parser('pass', help='Retrieve stored wifi passphrase')
parser_connect.add_argument('-n', '--network', help='SSID name', required=True)

args = parser.parse_args()

def exit_err(message, code):
    print(message)
    sys.exit(code)

def wifi_on(device):
    result = subprocess.run([networksetup_bin, "-setairportpower", device, "on"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        exit_err(str(result.stderr.decode()), result.returncode)


def wifi_off(device):
    result = subprocess.run([networksetup_bin, "-setairportpower", device, "off"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        exit_err(str(result.stderr.decode()), result.returncode)


def wifi_info(device):
    result = subprocess.run([airport_bin, "-I"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    print(result.stdout.decode('utf-8'))


def wifi_scan(device):
    result = subprocess.run([airport_bin, "scan"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        exit_err(str(result.stderr.decode()), result.returncode)
    else:
        print(result.stdout.decode('utf-8'))


def wifi_pass(network_name):
    result = subprocess.run([security_bin, "find-generic-password", "-wa", network_name], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        exit_err(str(result.stderr.decode()), result.returncode)
    else:
        print(result.stdout.decode('utf-8'))

    
def wifi_connect(device, network_name, network_pass):
    result = subprocess.run([networksetup_bin, "-setairportnetwork", device, network_name, network_pass], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        exit_err(str(result.stderr.decode()), result.returncode)
    else:
        print(result.stdout.decode('utf-8'))
    

def main():
    device_name = args.device
    if args.command == "on":
        wifi_on(device_name)
    if args.command == "off":
        wifi_off(device_name)
    if args.command == "scan":
        wifi_scan(device_name)
    if args.command == "pass":
        network_name = args.network
        wifi_pass(network_name)
    if args.command == "info":
        wifi_info(device_name)
    if args.command == "connect":
        network_name = args.network
        network_pass = args.password
        wifi_connect(device_name, network_name, network_pass)


if __name__ == '__main__':
    main()
